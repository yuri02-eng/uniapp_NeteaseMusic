{"version":3,"file":"Countformat.js","sources":["utils/Countformat.ts"],"sourcesContent":["function formatCount(value  : number=0):string {\r\n\tif ( value > 100000000) {\r\n\t\tvalue/=100000000\r\n\t\treturn value.toFixed(1) + '亿'\r\n\t}\r\n\telse if (value >= 10000) {\r\n\t\tvalue /= 10000\r\n\t\treturn value.toFixed(1) + '万'\r\n\t} else {\r\n\t\treturn value.toString()\r\n\t}\r\n}\r\nexport default  formatCount\r\nexport function joinArtistNames(\n  artists: { name: string }[],\n  separator: string = \" / \"\n): string {\n  // 使用 map 提取 name 属性并过滤无效值（网页3[3](@ref)、网页4[4](@ref)）\n  const validNames = artists\n    .map(artist => artist?.name?.trim()) // 提取并去除首尾空格\n    .filter(name => name && name.length > 0); // 过滤空值（网页8[8](@ref)）\n\n  // 使用 join 方法高效拼接（网页6[6](@ref)、网页7[7](@ref)）\n  return validNames.join(separator);\n}\r\nexport function formatTimestampToDate(\n  timestamp: number,\n  separator: string = '-'\n): string {\n  const date = new Date(timestamp);\n  \n  // 获取年月日并补零\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n\n  // 拼接结果\n  return [year, month, day].join(separator);\n}"],"names":[],"mappings":";AAAA,SAAS,YAAY,QAAgB,GAAU;AAC9C,MAAK,QAAQ,KAAW;AAChB,aAAA;AACA,WAAA,MAAM,QAAQ,CAAC,IAAI;AAAA,EAAA,WAElB,SAAS,KAAO;AACf,aAAA;AACF,WAAA,MAAM,QAAQ,CAAC,IAAI;AAAA,EAAA,OACpB;AACN,WAAO,MAAM;EACd;AACD;AAEgB,SAAA,gBACd,SACA,YAAoB,OACZ;AAER,QAAM,aAAa,QAChB,IAAI,CAAA,WAAA;;AAAU,kDAAQ,SAAR,mBAAc;AAAA,GAAM,EAClC,OAAO,CAAA,SAAQ,QAAQ,KAAK,SAAS,CAAC;AAGlC,SAAA,WAAW,KAAK,SAAS;AAClC;AACgB,SAAA,sBACd,WACA,YAAoB,KACZ;AACF,QAAA,OAAO,IAAI,KAAK,SAAS;AAGzB,QAAA,OAAO,KAAK;AACZ,QAAA,SAAS,KAAK,aAAa,GAAG,SAAS,EAAE,SAAS,GAAG,GAAG;AACxD,QAAA,MAAM,KAAK,QAAQ,EAAE,WAAW,SAAS,GAAG,GAAG;AAGrD,SAAO,CAAC,MAAM,OAAO,GAAG,EAAE,KAAK,SAAS;AAC1C;;;;"}